{"ast":null,"code":"// src/components/API.js\n\nconst base = 'http://localhost:8000'; // Adjust according to your backend URL\n\nconst registerUser = async (username, email, password, bio) => {\n  const response = await fetch(`${base}/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n      bio\n    })\n  });\n  const data = await response.json();\n  if (!response.ok) {\n    console.error('Error data:', data); // Log the error data for debugging\n    let errorMessage = 'Registration failed';\n    if (data.detail) {\n      if (Array.isArray(data.detail)) {\n        // Extract messages from the array\n        errorMessage = data.detail.map(err => `${err.msg}`).join(', ');\n      } else if (typeof data.detail === 'string') {\n        errorMessage = data.detail;\n      }\n    }\n    throw new Error(errorMessage);\n  }\n  return data;\n};\n\n// Similarly update loginUser\nconst loginUser = async (email, password) => {\n  const response = await fetch(`${base}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  const data = await response.json();\n  if (!response.ok) {\n    console.error('Error data:', data); // Log the error data for debugging\n    let errorMessage = 'Login failed';\n    if (data.detail) {\n      if (Array.isArray(data.detail)) {\n        errorMessage = data.detail.map(err => `${err.msg}`).join(', ');\n      } else if (typeof data.detail === 'string') {\n        errorMessage = data.detail;\n      }\n    }\n    throw new Error(errorMessage);\n  }\n  localStorage.setItem('token', data.access_token);\n  return data;\n};\nconst getProfile = async () => {\n  const token = localStorage.getItem('token');\n  const response = await fetch(`${base}/profile`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.detail || 'Failed to fetch profile');\n  }\n  return data;\n};\nconst updateProfile = async updates => {\n  const token = localStorage.getItem('token');\n  const response = await fetch(`${base}/profile`, {\n    method: 'PUT',\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updates)\n  });\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.detail || 'Failed to update profile');\n  }\n  return data;\n};\nconst downloadPDF = async () => {\n  const token = localStorage.getItem('token');\n  const response = await fetch(`${base}/download_pdf`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Failed to download PDF');\n  }\n  const blob = await response.blob();\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.setAttribute('download', 'your_file.pdf'); // you can change the file name\n  document.body.appendChild(link);\n  link.click();\n  link.remove();\n};\nexport { registerUser, loginUser, getProfile, updateProfile, downloadPDF };","map":{"version":3,"names":["base","registerUser","username","email","password","bio","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","error","errorMessage","detail","Array","isArray","map","err","msg","join","Error","loginUser","localStorage","setItem","access_token","getProfile","token","getItem","Authorization","updateProfile","updates","downloadPDF","blob","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","appendChild","click","remove"],"sources":["/Users/gaborhollbeck/Desktop/GitHub/16_SecondNetwork2/SecondNetwork2/frontend/src/components/API.js"],"sourcesContent":["// src/components/API.js\n\nconst base = 'http://localhost:8000'; // Adjust according to your backend URL\n\nconst registerUser = async (username, email, password, bio) => {\n    const response = await fetch(`${base}/register`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, email, password, bio }),\n    });\n    const data = await response.json();\n  \n    if (!response.ok) {\n      console.error('Error data:', data); // Log the error data for debugging\n      let errorMessage = 'Registration failed';\n      if (data.detail) {\n        if (Array.isArray(data.detail)) {\n          // Extract messages from the array\n          errorMessage = data.detail.map((err) => `${err.msg}`).join(', ');\n        } else if (typeof data.detail === 'string') {\n          errorMessage = data.detail;\n        }\n      }\n      throw new Error(errorMessage);\n    }\n    return data;\n  };\n  \n  // Similarly update loginUser\n  const loginUser = async (email, password) => {\n    const response = await fetch(`${base}/login`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email, password }),\n    });\n    const data = await response.json();\n  \n    if (!response.ok) {\n      console.error('Error data:', data); // Log the error data for debugging\n      let errorMessage = 'Login failed';\n      if (data.detail) {\n        if (Array.isArray(data.detail)) {\n          errorMessage = data.detail.map((err) => `${err.msg}`).join(', ');\n        } else if (typeof data.detail === 'string') {\n          errorMessage = data.detail;\n        }\n      }\n      throw new Error(errorMessage);\n    }\n    localStorage.setItem('token', data.access_token);\n    return data;\n  };\n  \n\nconst getProfile = async () => {\n  const token = localStorage.getItem('token');\n  const response = await fetch(`${base}/profile`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.detail || 'Failed to fetch profile');\n  }\n  return data;\n};\n\nconst updateProfile = async (updates) => {\n  const token = localStorage.getItem('token');\n  const response = await fetch(`${base}/profile`, {\n    method: 'PUT',\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(updates),\n  });\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.detail || 'Failed to update profile');\n  }\n  return data;\n};\n\nconst downloadPDF = async () => {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`${base}/download_pdf`, {\n        method: 'GET',\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    });\n    if (!response.ok) {\n        throw new Error('Failed to download PDF');\n    }\n    const blob = await response.blob();\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'your_file.pdf'); // you can change the file name\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n};\n\nexport { registerUser, loginUser, getProfile, updateProfile, downloadPDF };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}